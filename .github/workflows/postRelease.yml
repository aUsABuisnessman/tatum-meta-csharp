name: Integration Tests
run-name: ${{ inputs.version }} - post release tests

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Package Version'
        required: true
        type: string

env:
  GITHUB_GIST_ID: 7c96c30e8017c8dfb57b88e323f8114b

jobs:
  Reset_Test_Counters:
    name: Reset Test Counters
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3
    - name: Reset Test Counters
      uses: ./.github/actions/counters
      with:
        gistId: ${{ env.GITHUB_GIST_ID }}
        gistFileName: csharp-sdk-test-counters.json
        action: resetAll
        gistSecret: ${{ secrets.GIST_SECRET }}
    - name: Reset Test Counters - Failed
      uses: ./.github/actions/counters
      with:
        gistId: ${{ env.GITHUB_GIST_ID }}
        gistFileName: csharp-sdk-test-counters-failed.json
        action: resetAll
        gistSecret: ${{ secrets.GIST_SECRET }}
    - name: Reset Test Counters - Skipped
      uses: ./.github/actions/counters
      with:
        gistId: ${{ env.GITHUB_GIST_ID }}
        gistFileName: csharp-sdk-test-counters-skipped.json
        action: resetAll
        gistSecret: ${{ secrets.GIST_SECRET }}
  
  Test_Chains:
    strategy:
      fail-fast: false
      matrix:
        chain: [Ethereum, Bitcoin, Polygon, Bsc, Harmony, Solana]
    name: Test Chain Packages
    uses: ./.github/workflows/integrationTests.yml
    with:
      name: ${{ matrix.chain }}
      version: ${{ inputs.version }}
    secrets: inherit
    needs: Reset_Test_Counters
    
  Test_Other:
    if: ${{ always() }}
    strategy:
      fail-fast: false
      matrix:
        chain: [Nft, FungibleTokens, BlockchainFees]
    name: Test Other Packages
    uses: ./.github/workflows/integrationTests.yml
    with:
      name: ${{ matrix.chain }}
      version: ${{ inputs.version }}
    secrets: inherit
    needs: Test_Chains

  Update_Test_Summary:
    if: ${{ always() }}
    name: Update Test Summary
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3
    - name: Get Passed counter total  
      uses: ./.github/actions/counters
      id: get-passed-tests
      with:
        gistId: ${{ env.GITHUB_GIST_ID }}
        gistFileName: csharp-sdk-test-counters.json
        action: getTotal
        gistSecret: ${{ secrets.GIST_SECRET }}
    - name: Get Failed counter total
      uses: ./.github/actions/counters
      id: get-failed-tests
      with:
        gistId: ${{ env.GITHUB_GIST_ID }}
        gistFileName: csharp-sdk-test-counters-failed.json
        action: getTotal
        gistSecret: ${{ secrets.GIST_SECRET }}
    - name: Get Skipped counter total
      uses: ./.github/actions/counters
      id: get-skipped-tests
      with:
        gistId: ${{ env.GITHUB_GIST_ID }}
        gistFileName: csharp-sdk-test-counters-skipped.json
        action: getTotal
        gistSecret: ${{ secrets.GIST_SECRET }}
    - name: Update Test Summary Badge content
      uses: actions/github-script@v5
      with:
        script: |
            const gist = await github.rest.gists.get({
                gist_id: '7c96c30e8017c8dfb57b88e323f8114b'
            })
            const gistContent = JSON.parse(gist.data.files['csharp-sdk-test-summary.json'].content)
            gistContent['message'] = `✓ ${{ steps.get-passed-tests.outputs.total }} | ✗ ${{ steps.get-failed-tests.outputs.total }} | → ${{ steps.get-skipped-tests.outputs.total }}`
            await github.rest.gists.update({
                gist_id: '7c96c30e8017c8dfb57b88e323f8114b',
                files: {
                'csharp-sdk-test-summary.json': {
                    content: JSON.stringify(gistContent)
                }
                }
            })
        github-token: ${{ secrets.GIST_SECRET }}
    needs: Test_Other


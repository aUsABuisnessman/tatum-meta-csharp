name: Counters
inputs:
  gistId:
    description: 'Gist ID'
    required: true
  gistFileName:
    description: 'Gist file name'
    required: true
  action:
    required: true
    default: 'getValue'
    description: 'Action to perform on the Gist'
  counterValue:
    description: 'Value to add to the counter'
    required: false
  counterName:
    description: 'Name of the counter'
    required: false
  gistSecret:
    description: 'Gist Token'
    required: false
outputs:
  value:
    value: ${{ steps.counters.outputs.value }}
    description: 'The value of the counter'
  total:
    value: ${{ steps.counters.outputs.total }}
    description: 'The total value of all counters'
description: 'A GitHub Action to manage counters in a GitHub Gist'
runs:
  using: "composite"
  steps:
      - name: Add Value - load json file from gist, add value to the counter or initialize it and update the gist file using GIST_SECRET secret
        if: ${{ inputs.action == 'addValue' }}
        uses: actions/github-script@v5          
        with:
          script: |
                const gist = await github.rest.gists.get({
                gist_id: '${{ inputs.gistId }}'
                })
                const gistContent = JSON.parse(gist.data.files['${{ inputs.gistFileName }}'].content)
                if (gistContent['${{ inputs.counterName }}'] === undefined) {
                gistContent['${{ inputs.counterName }}'] = 0
                }
                gistContent['${{ inputs.counterName }}'] += parseInt('${{ inputs.counterValue }}')
                await github.rest.gists.update({
                gist_id: '${{ inputs.gistId }}',
                files: {
                    '${{ inputs.gistFileName }}': {
                    content: JSON.stringify(gistContent)
                    }
                }
                })
          github-token: ${{ inputs.gistSecret }}
      - name: Reset Value - load json file from gist, reset value of the counter and update the gist file using GIST_SECRET secret
        if: ${{ inputs.action == 'resetValue' }}
        uses: actions/github-script@v5
        with:
          script: |
            const gist = await github.rest.gists.get({
              gist_id: '${{ inputs.gistId }}'
            })
            const gistContent = JSON.parse(gist.data.files['${{ inputs.gistFileName }}'].content)
            gistContent['${{ inputs.counterName }}'] = 0
            await github.rest.gists.update({
              gist_id: '${{ inputs.gistId }}',
              files: {
                '${{ inputs.gistFileName }}': {
                  content: JSON.stringify(gistContent)
                }
              }
            })
          github-token: ${{ inputs.gistSecret }}
      - name: Reset All - load json file from gist, reset all counters and update the gist file using GIST_SECRET secret
        if: ${{ inputs.action == 'resetAll' }}
        uses: actions/github-script@v5
        with:
          script: |
            const gist = await github.rest.gists.get({
              gist_id: '${{ inputs.gistId }}'
            })
            const gistContent = JSON.parse(gist.data.files['${{ inputs.gistFileName }}'].content)
            for (const key in gistContent) {
              gistContent[key] = 0
            }
            await github.rest.gists.update({
              gist_id: '${{ inputs.gistId }}',
              files: {
                '${{ inputs.gistFileName }}': {
                  content: JSON.stringify(gistContent)
                }
              }
            })
          github-token: ${{ inputs.gistSecret }}
      - name: Get Value - load json file from gist, get value of the counter and output it
        if: ${{ inputs.action == 'getValue' }} 
        uses: actions/github-script@v5
        with:
          script: |
            const gist = await github.rest.gists.get({
              gist_id: '${{ inputs.gistId }}'
            })
            const gistContent = JSON.parse(gist.data.files['${{ inputs.gistFileName }}'].content)
            core.setOutput('value', gistContent['${{ inputs.counterName }}'])
          github-token: ${{ inputs.gistSecret }}
      - name: Get Total - load json file from gist, get total of all counters and output it
        if: ${{ inputs.action == 'getTotal' }}
        uses: actions/github-script@v5
        with:
          script: |
            const gist = await github.rest.gists.get({
              gist_id: '${{ inputs.gistId }}'
            })
            const gistContent = JSON.parse(gist.data.files['${{ inputs.gistFileName }}'].content)
            let total = 0
            for (const key in gistContent) {
              total += gistContent[key]
            }
            core.setOutput('total', total)
          github-token: ${{ inputs.gistSecret }}
    
